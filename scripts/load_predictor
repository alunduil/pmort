#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2012 by Alex Brandt <alunduil@alunduil.com>
#
# This program is free software; you can redistribute it and#or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA  02111-1307, USA.

import os
import time

def predict(load = os.getloadavg(), time = -1):
    L1 = load[0]
    L5 = load[1]
    L15 = load[2]

    def parabola(time = time):
        return (L15/140 - L5/40 + L1/56)*time**2 + (4*L5/10 - 5*L1/14 - 3*L15/70)*time + (225*L1/168 + L15/28 - 3*L5/8)

    return max(parabola(time)/(1/(time - 5)**2 - 5*(parabola(15) - parabola(5))) + parabola(1), 0)

def main():

    differences = []

    prediction = None

    while True:
        previous = prediction
        load = os.getloadavg()
        prediction = predict(load)

        if previous:
            differences.append(abs(previous - load[0]))
            print("Load: {0}; Prediction: {1:.2f}".format(load[0], previous))
        if len(differences):
            print("Current Difference: {0:.2f}; Average Difference: {1:.2f}".format(differences[-1], sum(differences)/len(differences)))

        time.sleep(60)

if __name__ == "__main__":
    main()

